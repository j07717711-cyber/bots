import os
import asyncio
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    ConversationHandler, filters, ContextTypes
)

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
BOT_TOKEN = os.getenv("8404846856:AAE9RPRzBneZPNqs-TwreIZMxGJ19WYhfuo")
GROUP_ID = int(os.getenv("GROUP_ID", "-4986401168"))  # –∑–∞–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

# --- –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞ ---
NAME, AGE, CITIZENSHIP, FROM_COUNTRY, DATES, PEOPLE, PURPOSE, CONTACT = range(8)

# --- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ---
async def greet(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    name = user.first_name or user.username or "–¥—Ä—É–≥"
    keyboard = [["üöÄ –ù–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É"]]

    try:
        with open("usa_flag.jpg", "rb") as photo:
            await update.message.reply_photo(
                photo=photo,
                caption=(
                    f"üëã –ü—Ä–∏–≤–µ—Ç, {name}! üá∫üá∏\n\n"
                    "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –ª–µ–≥–∞–ª—å–Ω–æ–π –∏–º–º–∏–≥—Ä–∞—Ü–∏–µ–π –≤ –°–®–ê.\n\n"
                    "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã üëá"
                ),
                reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            )
    except FileNotFoundError:
        # –ï—Å–ª–∏ —Ñ–ª–∞–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        await update.message.reply_text(
            f"üëã –ü—Ä–∏–≤–µ—Ç, {name}! üá∫üá∏\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å –ª–µ–≥–∞–ª—å–Ω–æ–π –∏–º–º–∏–≥—Ä–∞—Ü–∏–µ–π –≤ –°–®–ê.\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã üëá",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await greet(update, context)

# --- –≠—Ç–∞–ø—ã –∞–Ω–∫–µ—Ç—ã ---
async def start_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?", reply_markup=ReplyKeyboardRemove())
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç?")
    return AGE

async def get_age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["age"] = update.message.text
    await update.message.reply_text("–í–∞—à–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ?")
    return CITIZENSHIP

async def get_citizenship(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["citizenship"] = update.message.text
    await update.message.reply_text("–°—Ç—Ä–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è?")
    return FROM_COUNTRY

async def get_from_country(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["from_country"] = update.message.text
    await update.message.reply_text("–ñ–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞?")
    return DATES

async def get_dates(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["dates"] = update.message.text
    await update.message.reply_text("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫?")
    return PEOPLE

async def get_people(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["people"] = update.message.text
    reply_keyboard = [
        ["–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ —É–±–µ–∂–∏—â–µ", "–í–∏–∑–∞ —Ç–∞–ª–∞–Ω—Ç–æ–≤"],
        ["–õ–µ–≥–∞–ª–∏–∑–∞—Ü–∏—è", "–ê–≤—Ç–æ–ø–µ—Ä–µ—Ö–æ–¥"]
    ]
    await update.message.reply_text(
        "–í–∞—à–∞ —Ü–µ–ª—å:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return PURPOSE

async def get_purpose(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["purpose"] = update.message.text
    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç (—Ç–µ–ª–µ—Ñ–æ–Ω, email –∏–ª–∏ Telegram @username), "
        "–Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è:",
        reply_markup=ReplyKeyboardRemove()
    )
    return CONTACT

async def get_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["contact"] = update.message.text

    data = context.user_data
    message = (
        f"üìã <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:</b>\n\n"
        f"üë§ –ò–º—è: {data.get('name')}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data.get('age')}\n"
        f"üõÇ –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ: {data.get('citizenship')}\n"
        f"üåç –°—Ç—Ä–∞–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {data.get('from_country')}\n"
        f"üìÖ –î–∞—Ç—ã –≤—ã–ª–µ—Ç–∞: {data.get('dates')}\n"
        f"üë• –ö–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫: {data.get('people')}\n"
        f"üéØ –¶–µ–ª—å: {data.get('purpose')}\n"
        f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {data.get('contact')}"
    )

    processing = await update.message.reply_text("üïê –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É...")
    await asyncio.sleep(2)
    await processing.delete()

    await context.bot.send_message(chat_id=GROUP_ID, text=message, parse_mode="HTML")
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    await asyncio.sleep(1)
    await update.message.reply_text("ü§ñ –ö–æ–º–∞–Ω–¥–∞ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ —ç—Ç–æ–π –∑–∞—è–≤–∫–æ–π!")
    await asyncio.sleep(1)

    await greet(update, context)
    return ConversationHandler.END

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ---
def main():
    if not BOT_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞!")
        return

    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("(?i)(–Ω–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É|üöÄ –Ω–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É)"), start_form)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_age)],
            CITIZENSHIP: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_citizenship)],
            FROM_COUNTRY: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_from_country)],
            DATES: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_dates)],
            PEOPLE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_people)],
            PURPOSE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_purpose)],
            CONTACT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_contact)],
        },
        fallbacks=[],
    )

    app.add_handler(conv_handler)
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, greet))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    app.run_polling()

if __name__ == "__main__":
    main()


